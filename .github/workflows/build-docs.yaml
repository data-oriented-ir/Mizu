# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build Documentation

permissions:
  contents: read
  pages: write
  id-token: write

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: "true"

    - uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install Doxygen
      run: sudo apt-get update && sudo apt-get install -y doxygen
      shell: bash

    - name: Install Sphinx
      run: python3 -m pip install -r ${{github.workspace}}/docs/requirements.txt

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DMIZU_BUILD_DOCS=ON -DMIZU_BUILD_TESTS=OFF

    - name: Build
      run: cmake --build ${{github.workspace}}/build --target mizu_sphinx

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ${{github.workspace}}/build/mizu_sphinx

    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v4

    # - name: Prepare Deployment
    #   run: |
    #     mkdir ../deploy
    #     cp -r ${{github.workspace}}/build/mizu_sphinx/* ../deploy
    #     git fetch
    #     git checkout --force -B gh-pages
    #     git reset --hard
    #     mv .git ..
    #     rm -rf *
    #     mv ../.git .
    #     cp -r ../deploy/* .

    # - name: Deploy
    #   run: |
    #     git config user.name github-actions
    #     git config user.email github-actions@github.com
    #     git add .
    #     git commit --amend -m "Update Github Pages"
    #     git push --force -u origin gh-pages

