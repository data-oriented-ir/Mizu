cmake_minimum_required(VERSION 3.20)
project(MizuVM CXX C)

set(CMAKE_CXX_STANDARD 20)

include(cmake/TargetArch.cmake)
target_architecture(MIZU_ARCHITECTURE)

add_subdirectory(ffi/wasm) # Builds the generator for the wasm side of things
if(${MIZU_ARCHITECTURE} STREQUAL wasm32)
	if(EMSCRIPTEN)
		set(CMAKE_EXECUTABLE_SUFFIX ".html")
	endif()
	set(WASM true)
else()
	add_subdirectory(ffi/libffi)
	set(WASM false)
endif()

if(WIN32)
	add_library(tst_dll SHARED "test.cpp")
	target_link_libraries(tst_dll PUBLIC ffi_static)
	target_compile_definitions(tst_dll PUBLIC MIZU_LOAD_CURRENT_EXECUTABLE_PATH="$<TARGET_FILE:tst_dll>")
	add_executable(tst "windows.cpp")
	target_link_libraries(tst PUBLIC tst_dll)
else()
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -rdynamic")
	add_executable(tst "test.cpp")
	if(WASM)
		target_compile_definitions(tst PUBLIC MIZU_NO_THREADS MIZU_NO_EXCEPTIONS)
    	target_compile_options(tst PUBLIC -fno-exceptions)
	else()
		target_link_libraries(tst PUBLIC ffi_static)
	endif()
endif()

# add_library(tst_load SHARED shared.cpp)